[
  {
    "objectID": "projetoSTL.html",
    "href": "projetoSTL.html",
    "title": "O projeto Sol-Terra-Lua",
    "section": "",
    "text": "Neste capítulo, aprenderemos o uso básico do A-Frame por meio do desenvolvimento de um projeto para ensino de Astronomia.\nNo projeto Sol-Terra-Lua (abrev. STL) iremos:"
  },
  {
    "objectID": "projetoSTL.html#elementos-html-do-a-frame",
    "href": "projetoSTL.html#elementos-html-do-a-frame",
    "title": "O projeto Sol-Terra-Lua",
    "section": "Elementos HTML do A-Frame",
    "text": "Elementos HTML do A-Frame\nTodo o desenvolvimento do projeto será realizado no Glitch.\n\nFaça o login na sua conta do Glitch e remixe o projeto aframe-minicurso-vr\n\nRepare que o projeto está bastante vazio, com apenas o arquivo index.html e sem qualquer código Javascript explícito. Entretanto, temos dentro do head a inclusão do arquivo online:\nhttps://aframe.io/releases/1.6.0/aframe.min.js.\nÉ esse arquivo, acessado remotamente, que disponibilizará o núcleo de funcionalidades do A-Frame.\n\nO elemento HTML básico e obrigatório do A-Frame é o a-scene, o qual temos que incluir dentro do elemento body:\n&lt;body&gt;\n    &lt;a-scene&gt;\n    &lt;/a-scene&gt;\n&lt;/body&gt;\n\nDentro do a-scene todos os elementos espaciais do projeto serão incluídos. Esses elementos recebem o nome de a-entity (entidades). Cada entidade, por sua vez, terá uma série de propriedades, chamadas de components (componentes). Por fim, cada componente terá atributos que definirão as aparências e funcionalidades da entidade.\nEsse tipo de estruturação segue o modelo ECS (Entity-Component-System) que é alternativo ao modelo de classes e objetos. Ele se opõe ao sistema de hierarquização da programação orientada a objetos ao permitir maior modularização e inter-operacionalização dos componentes que podem ser aplicados diretamente em diferentes entidades.\nEis um exemplo de uma estrutura ECS no A-Frame:\na-scene:\n\na-entity id = \"carro\":\n\nrodas = \"quantidade : 4; aro: 20\"\nmaterial = \"cor: azul; metalicidade: 0.5\"\n\na-entity id = \"moto\":\n\nrodas = \"quantidade : 2; aro: 40\"\nmaterial = \"cor: vermelho; metalicidade: 0.8\"\n\n\n\n\n\nIlustração das Entidades carro e moto com seus componentes e atributos específicos (feita com DALL-E)\n\n\nNesse exemplo, carro e moto são entidades distintas, mas rodas e material são componentes que podem ser compartilhados pelas diferentes entidades. Esses componentes irão se diferenciar por possuírem valores diferentes para os seus atributos (e.g. rodas com quantidade : 2 ou quantidade : 4) e por estarem atrelados a diferentes entidades. Uma das vantages dessa abordagem ECS é que eu preciso programar o componente rodas somente uma vez e ele pode ser usado em diferentes veículos.\nEntidades podem ser aninhadas. Por exemplo, ao invés de tratar as rodas como sendo componentes, poderíamos considerar mais apropriado implementá-las na forma de uma entidade:\na-scene:\n\na-entity id = \"fusca\":\n\na-entity id = \"rodas_do_fusca\":\n\nmaterial = \"cor: preto; metalicidade: 0.1\"\ndimensoes = \"aro: 20; largura: 10; quantidade: 4\"\n\n\na-entity id = \"moto\":\n\nrodas = \"quantidade : 2; aro: 40\"\nmaterial = \"cor: vermelho; metalicidade: 0.8\"\n\n\nVamos então criar nossa primeira entidade: o planeta Terra.\n\nColoque a entidade abaixo dentro do elemento a-scene:\n&lt;a-entity id=\"terra\" geometry=\"primitive: sphere\" material=\"color: blue\"&gt;&lt;/a-entity&gt;\n\nSe fizermos o preview lateral para tentarmos observar o resultado, provavelmente não veremos nada. Isso ocorre, pois não estamos usando os óculos de realidade virtual. A melhor forma de interagir com a página gerada na tela do computador é escolhendo a opção Preview in a new window. Na página que foi aberta, devemos entrar no modo de inspeção (Visual inspector) ao digitar a combinação de teclas &lt;ctrl&gt; + &lt;alt&gt; + i ou &lt;ctrl&gt; + &lt;option&gt; + i.\nCada botão do mouse quando mantido apertado permite rotacionar, transladar e aproximar/afastar a visão da cena. Ao clicar em uma entidade é possível também aferir e alterar os valores dos seus atributos. É possível até mesmo criar entidades novas e atribuir componentes no Visual inspector.\nVoltando à Terra, vamos “dar um talento” em nosso pale blue dot.1 Para isso, vamos usar uma imagem planificada da superfície da Terra e mapeá-la na esfera. Por sorte, o A-Frame faz isso muito diretamente para a gente. Vejamos como."
  },
  {
    "objectID": "projetoSTL.html#carregando-arquivos-externos-em-nosso-projeto-stl",
    "href": "projetoSTL.html#carregando-arquivos-externos-em-nosso-projeto-stl",
    "title": "O projeto Sol-Terra-Lua",
    "section": "Carregando arquivos externos em nosso projeto STL",
    "text": "Carregando arquivos externos em nosso projeto STL\nO A-Frame possui um elemento chamado &lt;a-asset&gt; para pré-carregar todos os recursos (imagens, áudios, vídeos, etc) que sejam usados na página. Existem duas formas para fazer isso:\n\nCarregando o recurso dentro do Glitch via Files no menu lateral de arquivos.\nIndicando o endereço de internet (URL) do recurso caso ele esteja disponível.\n\nNo momento, vamos usar a segunda opção.\n\nClique com o botão direito do mouse sobre o mapa da Terra abaixo e copie o seu link.\n\n\n\n\nhttps://en.wikipedia.org/wiki/World_map#/media/File:Blue_Marble_2002.png\n\n\n\nDentro do &lt;a-scene&gt; inclua o elemento:\n&lt;a-assets&gt;\n    &lt;img id=\"mapa_terra\" src=\"substitua_isto_pelo_endereço_da_imagem\"&gt;\n&lt;/a-assets&gt;\nEm seguida substitua o atributo color por src no componente material da entidade terra, usando como valor a id do mapa da Terra:\n&lt;a-entity id=\"terra\"\n    geometry=\"primitive: sphere\"\n    material=\"src: #mapa_terra\"&gt;\n&lt;/a-entity&gt;"
  },
  {
    "objectID": "projetoSTL.html#footnotes",
    "href": "projetoSTL.html#footnotes",
    "title": "O projeto Sol-Terra-Lua",
    "section": "",
    "text": "Expressão cunhada pelo astrônomo e divulgador científico Carl Sagan ao descrever a imagem da Terra capturada pela sonda Voyager 1, a uma grande distância. No retrato, o planeta aparece como um minúsculo ponto azul. Sagan utilizou essa imagem para refletir sobre a humildade e a responsabilidade da humanidade em relação ao único lar conhecido.↩︎"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Resumo",
    "section": "",
    "text": "Realidade Virtual em páginas e aplicativos web\n\nAs vantagens, flexibilidade, alcance e potencial de aplicações web baseadas em HTML5/JS/CSS.\nRealidade Virtual em smartphones versus VR headsets. Focaremos no segundo.\nA API (Interface de Programação de Aplicativos) WebXR utilizada pelos headsets VR nas páginas web.\nExemplos de Plataformas Web que utilizam WebXR:\n\nThree.js\nBabylon.js\nA-Frame\n\n\n\n\nPrincipais características do A-Frame\n\nFilosofia\nObjetivos\nUsos\n\n\n\nBreve introdução ao HTML/Javascript\n\nComo se estrutura um arquivo HTML/Javascript básico\nFormas de rodar o arquivo HTML:\n\nPágina local (editor de texto txt). Usaremos apenas para mostrar os passos iniciais do HTML/Javascript.\nServidor web (usaremos o Glitch, mas existem inúmeros outros). Será usado para o desenvolvimento de todo o aplicativo deste minicurso.\nServidor local (apenas mostraremos, ao final do minicurso, o caminho que estamos adotando em nossos projetos).\n\n\n\n\nAplicativo Sol-Terra-Lua em VR com o A-Frame\nVamos aprender a usar o A-Frame através de um processo mão na massa de construção de um aplicativo VR para visualização da dinâmica do sistema Sol-Terra-Lua (STL)."
  },
  {
    "objectID": "htmlbasico.html",
    "href": "htmlbasico.html",
    "title": "HTML/Javascript básico",
    "section": "",
    "text": "Neste capítulo daremos uma noção bastante introdutória de como criar arquivos HTML/Javascript que podem ser carregados diretamente em um browser a partir de um arquivo local txt ou a partir de uma hospedagem na internet."
  },
  {
    "objectID": "htmlbasico.html#estrutura-básica-de-uma-página-html",
    "href": "htmlbasico.html#estrutura-básica-de-uma-página-html",
    "title": "HTML/Javascript básico",
    "section": "Estrutura básica de uma página HTML",
    "text": "Estrutura básica de uma página HTML\n\nElementos HTML\nOs elementos HTML são incluídos com palavras reservadas na forma de tags HTML: &lt;bla&gt;&lt;/bla&gt; ou somente &lt;blas&gt;. Exemplos:\n\nTítulos de seção: &lt;h1&gt;Título&lt;/h1&gt;\nParágrafos: &lt;p&gt;Conteúdo do parágrafo&lt;/p&gt;\nBotões: &lt;button&gt;Texto do botão&lt;/button&gt;\nInputs de texto: &lt;input&gt;\n\n\nCopie e cole o conteúdo abaixo em um editor de texto para arquivos txt (bloco de notas no Windows, gedit no Linux, etc).\n&lt;h1&gt;Minha adorável página HTML&lt;/h1&gt;\n\n&lt;p&gt;Nesta página estou incluindo somente alguns elementos HTML para testar o seu uso. Algo muito simples, porém o HTML possui muitos outros recursos.&lt;/p&gt;\n\n&lt;p&gt;Elementos HTML podem ser aninhados uns dentro dos outros, como neste parágrafo, em que terminamos com essa entrada de texto usando o elemento \"input\": &lt;input&gt;&lt;/p&gt;\n\n&lt;p&gt;Clique nesse botão e veja o que acontece: &lt;button&gt;Clique em mim&lt;/button&gt; &lt;/p&gt;\nEm seguida, salve o arquivo com extensão html. Por exemplo: “arquivomeu.html”.\nAbra o arquivo com o navegador de internet (Chrome, Bing, Firefox, Safari, etc.)\nEdite o arquivo para incluir elementos novos criados por você. Salve o arquivo, recarregue a página e veja que suas alterações foram atualizadas na página.\n\n\n\nAdicionando lógica e programação com Javascript\nPara que coisas úteis aconteçam na página HTML, precisamos processar informação. Para isso, existe a linguagem Javascript que é incluída com a tag &lt;script&gt;&lt;/script&gt;.\n\nO código abaixo foi extraído de Silva (2016). Salve-o em um arquivo HTML e carregue no seu navegador de internet para ver o resultado.\n&lt;script&gt;\n    var a = 2;\n    var b = 3;\n    var c = a + b;\n    document.write(\"A soma de \" + a + \" com \" + b + \" resulta em \" + c);\n&lt;/script&gt;\nModifique o script anterior para efetuar a multiplicação de dois números. A operação de multiplicação é implementada com o caractere “*” (asterisco).\n\n\n\nInteragindo HTML com Javascript\nPara fazer com que elementos HTML específicos sejam modificados via código Javascript é necessário adicionar atributos a eles.\n\nNo código abaixo, um elemento de parágrafo inicialmente vazio recebe o atributo de identificação id e o elemento de botão recebe o atributo onclick. Dessa forma, quando o botão é clicado, a função processarClique() é chamada em que ela atualiza o texto do parágrafo pela sua identificação.\n&lt;h1&gt;Página dos apertadores de botão&lt;/h1&gt;\n\n&lt;p&gt;\n    &lt;button onclick=\"processarClique()\"&gt;\n        Botão incrível\n    &lt;/button&gt;\n&lt;/p&gt;\n\n&lt;p id=\"resultado\"&gt;&lt;p&gt;\n\n&lt;script&gt;\n    var clicadas = 0;\n\n    function processarClique() {\n        clicadas = clicadas + 1;\n        document.getElementById(\"resultado\").innerHTML = \"Você clicou \" + clicadas + \" vezes no Botão incrível.\";\n    }\n&lt;/script&gt;\nSalve o código acima em um arquivo .html e abra no seu navegador de internet para ver o resultado.\n\n\n\n\n\n\n\nVeja uma implementação mais precisa do código acima\n\n\n\n\n\n&lt;h1&gt;Página dos apertadores de botão&lt;/h1&gt;\n\n&lt;p&gt;\n    &lt;button onclick=\"processarClique()\"&gt;\n        Botão incrível\n    &lt;/button&gt;\n&lt;/p&gt;\n\n&lt;p id=\"resultado\"&gt;&lt;p&gt;\n\n&lt;script&gt;\n    var clicadas = 0;\n    \n    function processarClique() {\n        clicadas = clicadas + 1;\n\n        if (clicadas &gt; 1) {\n            document.getElementById(\"resultado\").innerHTML = \"Você clicou \" + clicadas + \" vezes no Botão incrível.\";\n        }\n        else {\n            document.getElementById(\"resultado\").innerHTML = \"Você clicou \" + clicadas + \" vez no Botão incrível.\";\n        }\n    }\n&lt;/script&gt;"
  },
  {
    "objectID": "htmlbasico.html#estrutura-completa-de-uma-página-html",
    "href": "htmlbasico.html#estrutura-completa-de-uma-página-html",
    "title": "HTML/Javascript básico",
    "section": "Estrutura completa de uma página HTML",
    "text": "Estrutura completa de uma página HTML\nUma página HTML completa, em geral, vai ser dividida em três arquivos:\n\nindex.html: é o arquivo principal e o primeiro a ser carregado pelo navegador de internet.\nscript.js: é o arquivo em que a programação Javascript fica melhor separada e organizada.\nstyle.css: é o arquivo de estilos que altera a aparência e às, vezes, a funcionalidade dos elementos HTML.\n\nEm que o arquivo index.html terá uma estrutura semelhante a esta:\n&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n\n    &lt;!-- Aqui é incluído o preâmbulo com as configurações da página --&gt;\n    &lt;head&gt;\n\n        &lt;!-- Este é o título (opcional) da página --&gt;    \n        &lt;title&gt;Hello World!&lt;/title&gt;\n\n        &lt;!-- Aqui é carregado a arquivo de estilos --&gt;\n        &lt;link rel=\"stylesheet\" href=\"/style.css\" /&gt;\n\n        &lt;!-- Aqui é carregado o arquivo Javascript --&gt;\n        &lt;script src=\"/script.js\" defer&gt;&lt;/script&gt;\n\n    &lt;/head&gt;\n\n    &lt;!-- Aqui é incluído todo o HTML e, caso queira, o Javascript também --&gt;\n    &lt;body&gt;\n\n        &lt;h1&gt;Minha página web completa&lt;/h1&gt;\n\n        &lt;p&gt;Meu sucinto parágrafo.&lt;/p&gt;\n\n        &lt;button&gt;Meu inútil botão&lt;/button&gt;\n\n        &lt;!-- Você também pode colocar código Javascript aqui --&gt;\n        &lt;script&gt;\n\n            var x = 3;\n            var y = 2;\n            var z = x + y;\n\n        &lt;/script&gt;\n\n    &lt;/body&gt;\n\n&lt;/html&gt;\nPodemos criar arquivos txt para cada um dos três arquivos e abrir o arquivo HTML no navegador de internet como vínhamos fazendo até aqui. Entretanto, a partir de agora começaremos a colocar nossas páginas diretamente na Internet.\n\nAprender mais sobre HTML/Javascript/CSS"
  },
  {
    "objectID": "htmlbasico.html#disponibilizando-páginas-web-diretamente-na-internet-com-glitch",
    "href": "htmlbasico.html#disponibilizando-páginas-web-diretamente-na-internet-com-glitch",
    "title": "HTML/Javascript básico",
    "section": "Disponibilizando páginas web diretamente na Internet com Glitch",
    "text": "Disponibilizando páginas web diretamente na Internet com Glitch\nExistem diversas plataformas gratuitas que permitem a hospedagem de páginas web. Entre elas, podemos destacar:\n\nReplit\nCodeSandbox\nGitHub Pages\nGlitch\n\nNeste minicurso usaremos o Glitch.\nGlitch é uma plataforma online para desenvolvimento e hospedagem de aplicações web, permitindo edição colaborativa em tempo real diretamente no navegador. Páginas criadas no Glitch são disponibilizadas quase que instantaneamente em um endereço de internet de acesso público.\nVamos começar a partir de um projeto básico que criamos para este minicurso.\n\nAcesse: https://glitch.com/edit/#!/fishy-foil-technosaurus\n\nAo acessar esse projeto, você deverá observar a tela abaixo.\n\n\n\nPrint da tela do projeto fishy-foil-technosaurus no Glitch\n\n\nA tela apresenta basicamente dois painéis:\n\nO painel de arquivos e configurações à esquerda.\nO painel de código à direita que mostra o conteúdo do arquivo escolhido no painel de arquivo.\n\nNo canto inferior direito há o botão de preview, que renderiza (gera/compila) a página index.html que será mostrada para quem acessar a página no endereço público do projeto.\n\nAgora, antes de começar a editar e trabalhar em projetos no Glitch, é importante criar uma conta nele, pois isso permitirá acessar os projetos posteriormente.\nApós criar a conta, acesse novamente a edição do projeto fishy-foil-technosaurus e clique no botão Remix do Edit localizado no canto superior direito.\n\n\n\n\n\n\n\nTarefa\n\n\n\n\nA partir do fishy-foil-technosaurus remixado, implemente o botão contador de clicadas que fizemos anteriormente no editor de texto.\n\n\n\nClicando em Settings no painel de arquivos e configurações você pode alterar o nome do projeto.\nPara finalizar, com o botão Share você pode compartilhar o seu projeto de três formas diferentes:\n\nPágina web final (Live site): https://fishy-foil-technosaurus.glitch.me\nEdição do código [Code]: https://glitch.com/edit/#!/fishy-foil-technosaurus\nApresentação do Projeto [Project Page]: https://glitch.com/~fishy-foil-technosaurus\n\n\nAprender mais sobre o Glitch\n\n\n\n\n\nSilva, Nelson Canzian da. 2016. Física com JavaScript. Depto de Física - UFSC. https://canzian.prof.ufsc.br/fisicacomjavascript/fjs-00-tudo.pdf."
  }
]