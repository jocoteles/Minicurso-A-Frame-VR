[
  {
    "objectID": "htmlbasico.html",
    "href": "htmlbasico.html",
    "title": "2  HTML/Javascript básico",
    "section": "",
    "text": "2.1 Estrutura básica de uma página HTML",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HTML/Javascript básico</span>"
    ]
  },
  {
    "objectID": "htmlbasico.html#estrutura-básica-de-uma-página-html",
    "href": "htmlbasico.html#estrutura-básica-de-uma-página-html",
    "title": "2  HTML/Javascript básico",
    "section": "",
    "text": "2.1.1 Elementos HTML\nOs elementos HTML são incluídos com palavras reservadas na forma de tags HTML: &lt;bla&gt;&lt;/bla&gt; ou somente &lt;blas&gt;. Exemplos:\n\nTítulos de seção: &lt;h1&gt;Título&lt;/h1&gt;\nParágrafos: &lt;p&gt;Conteúdo do parágrafo&lt;/p&gt;\nBotões: &lt;button&gt;Texto do botão&lt;/button&gt;\nInputs de texto: &lt;input&gt;\n\n\nCopie e cole o conteúdo abaixo em um editor de texto para arquivos txt (bloco de notas no Windows, gedit no Linux, etc).\n&lt;h1&gt;Minha adorável página HTML&lt;/h1&gt;\n\n&lt;p&gt;Nesta página estou incluindo somente alguns elementos HTML para testar o seu uso. Algo muito simples, porém o HTML possui muitos outros recursos.&lt;/p&gt;\n\n&lt;p&gt;Elementos HTML podem ser aninhados uns dentro dos outros, como neste parágrafo, em que terminamos com essa entrada de texto usando o elemento \"input\": &lt;input&gt;&lt;/p&gt;\n\n&lt;p&gt;Clique nesse botão e veja o que acontece: &lt;button&gt;Clique em mim&lt;/button&gt; &lt;/p&gt;\nEm seguida, salve o arquivo com extensão html. Por exemplo: “arquivomeu.html”.\nAbra o arquivo com o navegador de internet (Chrome, Bing, Firefox, Safari, etc.)\nEdite o arquivo para incluir elementos novos criados por você. Salve o arquivo, recarregue a página e veja que suas alterações foram atualizadas na página.\n\n\n\n2.1.2 Adicionando lógica e programação com Javascript\nPara que coisas úteis aconteçam na página HTML, precisamos processar informação. Para isso, existe a linguagem Javascript que é incluída com a tag &lt;script&gt;&lt;/script&gt;.\n\nO código abaixo foi extraído de Silva (2016). Salve-o em um arquivo HTML e carregue no seu navegador de internet para ver o resultado.\n&lt;script&gt;\n    var a = 2;\n    var b = 3;\n    var c = a + b;\n    document.write(\"A soma de \" + a + \" com \" + b + \" resulta em \" + c);\n&lt;/script&gt;\nModifique o script anterior para efetuar a multiplicação de dois números. A operação de multiplicação é implementada com o caractere “*” (asterisco).\n\n\n\n2.1.3 Interagindo HTML com Javascript\nPara fazer com que elementos HTML específicos sejam modificados via código Javascript é necessário adicionar atributos a eles.\n\nNo código abaixo, um elemento de parágrafo inicialmente vazio recebe o atributo de identificação id e o elemento de botão recebe o atributo onclick. Dessa forma, quando o botão é clicado, a função processarClique() é chamada em que ela atualiza o texto do parágrafo pela sua identificação.\n&lt;h1&gt;Página dos apertadores de botão&lt;/h1&gt;\n\n&lt;p&gt;\n    &lt;button onclick=\"processarClique()\"&gt;\n        Botão incrível\n    &lt;/button&gt;\n&lt;/p&gt;\n\n&lt;p id=\"resultado\"&gt;&lt;p&gt;\n\n&lt;script&gt;\n    var clicadas = 0;\n\n    function processarClique() {\n        clicadas = clicadas + 1;\n        document.getElementById(\"resultado\").innerHTML = \"Você clicou \" + clicadas + \" vezes no Botão incrível.\";\n    }\n&lt;/script&gt;\nSalve o código acima em um arquivo .html e abra no seu navegador de internet para ver o resultado.\n\n\n\n\n\n\n\nVeja uma implementação mais precisa do código acima\n\n\n\n\n\n&lt;h1&gt;Página dos apertadores de botão&lt;/h1&gt;\n\n&lt;p&gt;\n    &lt;button onclick=\"processarClique()\"&gt;\n        Botão incrível\n    &lt;/button&gt;\n&lt;/p&gt;\n\n&lt;p id=\"resultado\"&gt;&lt;p&gt;\n\n&lt;script&gt;\n    var clicadas = 0;\n    \n    function processarClique() {\n        clicadas = clicadas + 1;\n\n        if (clicadas &gt; 1) {\n            document.getElementById(\"resultado\").innerHTML = \"Você clicou \" + clicadas + \" vezes no Botão incrível.\";\n        }\n        else {\n            document.getElementById(\"resultado\").innerHTML = \"Você clicou \" + clicadas + \" vez no Botão incrível.\";\n        }\n    }\n&lt;/script&gt;",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HTML/Javascript básico</span>"
    ]
  },
  {
    "objectID": "htmlbasico.html#estrutura-completa-de-uma-página-html",
    "href": "htmlbasico.html#estrutura-completa-de-uma-página-html",
    "title": "2  HTML/Javascript básico",
    "section": "2.2 Estrutura completa de uma página HTML",
    "text": "2.2 Estrutura completa de uma página HTML\nUma página HTML completa, em geral, vai ser dividida em três arquivos:\n\nindex.html: é o arquivo principal e o primeiro a ser carregado pelo navegador de internet.\nscript.js: é o arquivo em que a programação Javascript fica melhor separada e organizada.\nstyle.css: é o arquivo de estilos que altera a aparência e às, vezes, a funcionalidade dos elementos HTML.\n\nEm que o arquivo index.html terá uma estrutura semelhante a esta:\n&lt;!DOCTYPE html&gt;\n\n&lt;html&gt;\n\n    &lt;!-- Aqui é incluído o preâmbulo com as configurações da página --&gt;\n    &lt;head&gt;\n\n        &lt;!-- Este é o título (opcional) da página --&gt;    \n        &lt;title&gt;Hello World!&lt;/title&gt;\n\n        &lt;!-- Aqui é carregado a arquivo de estilos --&gt;\n        &lt;link rel=\"stylesheet\" href=\"/style.css\" /&gt;\n\n        &lt;!-- Aqui é carregado o arquivo Javascript --&gt;\n        &lt;script src=\"/script.js\" defer&gt;&lt;/script&gt;\n\n    &lt;/head&gt;\n\n    &lt;!-- Aqui é incluído todo o HTML e, caso queira, o Javascript também --&gt;\n    &lt;body&gt;\n\n        &lt;h1&gt;Minha página web completa&lt;/h1&gt;\n\n        &lt;p&gt;Meu sucinto parágrafo.&lt;/p&gt;\n\n        &lt;button&gt;Meu inútil botão&lt;/button&gt;\n\n        &lt;!-- Você também pode colocar código Javascript aqui --&gt;\n        &lt;script&gt;\n\n            var x = 3;\n            var y = 2;\n            var z = x + y;\n\n        &lt;/script&gt;\n\n    &lt;/body&gt;\n\n&lt;/html&gt;\nPodemos criar arquivos txt para cada um dos três arquivos e abrir o arquivo HTML no navegador de internet como vínhamos fazendo até aqui. Entretanto, a partir de agora começaremos a colocar nossas páginas diretamente na Internet.\n\nAprender mais sobre HTML/Javascript/CSS",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HTML/Javascript básico</span>"
    ]
  },
  {
    "objectID": "htmlbasico.html#disponibilizando-páginas-web-diretamente-na-internet-com-glitch",
    "href": "htmlbasico.html#disponibilizando-páginas-web-diretamente-na-internet-com-glitch",
    "title": "2  HTML/Javascript básico",
    "section": "2.3 Disponibilizando páginas web diretamente na Internet com Glitch",
    "text": "2.3 Disponibilizando páginas web diretamente na Internet com Glitch\nExistem diversas plataformas gratuitas que permitem a hospedagem de páginas web. Entre elas, podemos destacar:\n\nReplit\nCodeSandbox\nGitHub Pages\nGlitch\n\nNeste minicurso usaremos o Glitch.\nGlitch é uma plataforma online para desenvolvimento e hospedagem de aplicações web, permitindo edição colaborativa em tempo real diretamente no navegador. Páginas criadas no Glitch são disponibilizadas quase que instantaneamente em um endereço de internet de acesso público.\nVamos começar a partir de um projeto básico que criamos para este minicurso.\n\nAcesse: https://glitch.com/edit/#!/fishy-foil-technosaurus\n\nAo acessar esse projeto, você deverá observar a tela abaixo.\n\n\n\nPrint da tela do projeto fishy-foil-technosaurus no Glitch\n\n\nA tela apresenta basicamente dois painéis:\n\nO painel de arquivos e configurações à esquerda.\nO painel de código à direita que mostra o conteúdo do arquivo escolhido no painel de arquivo.\n\nNo canto inferior direito há o botão de preview, que renderiza (gera/compila) a página index.html que será mostrada para quem acessar a página no endereço público do projeto.\n\nAgora, antes de começar a editar e trabalhar em projetos no Glitch, é importante criar uma conta nele, pois isso permitirá acessar os projetos posteriormente.\nApós criar a conta, acesse novamente a edição do projeto fishy-foil-technosaurus e clique no botão Remix do Edit localizado no canto superior direito.\n\n\n\n\n\n\n\nTarefa\n\n\n\n\nA partir do fishy-foil-technosaurus remixado, implemente o botão contador de clicadas que fizemos anteriormente no editor de texto.\n\n\n\nClicando em Settings no painel de arquivos e configurações você pode alterar o nome do projeto.\nPara finalizar, com o botão Share você pode compartilhar o seu projeto de três formas diferentes:\n\nPágina web final (Live site): https://fishy-foil-technosaurus.glitch.me\nEdição do código [Code]: https://glitch.com/edit/#!/fishy-foil-technosaurus\nApresentação do Projeto [Project Page]: https://glitch.com/~fishy-foil-technosaurus\n\n\nAprender mais sobre o Glitch\n\n\n\n\n\nSilva, Nelson Canzian da. 2016. Física com JavaScript. Depto de Física - UFSC. https://canzian.prof.ufsc.br/fisicacomjavascript/fjs-00-tudo.pdf.",
    "crumbs": [
      "<span class='chapter-number'>2</span>  <span class='chapter-title'>HTML/Javascript básico</span>"
    ]
  },
  {
    "objectID": "projetoSTL.html",
    "href": "projetoSTL.html",
    "title": "3  O projeto Sol-Terra-Lua",
    "section": "",
    "text": "3.1 Elementos HTML do A-Frame\nTodo o desenvolvimento do projeto será realizado no Glitch.\nRepare que o projeto está bastante vazio, com apenas o arquivo index.html e sem qualquer código Javascript explícito. Entretanto, temos dentro do head a inclusão do arquivo online:\nhttps://aframe.io/releases/1.6.0/aframe.min.js.\nÉ esse arquivo, acessado remotamente, que disponibilizará o núcleo de funcionalidades do A-Frame.\nDentro do &lt;a-scene&gt; todos os elementos espaciais do projeto serão incluídos. Esses elementos recebem o nome de &lt;a-entity&gt; (Entidades). Cada entidade, por sua vez, terá uma série de propriedades, chamadas de components (Componentes). Por fim, cada componente terá atributos que definirão as aparências e funcionalidades da entidade.\nEsse tipo de estruturação segue o modelo ECS (Entity-Component-System) que é alternativo ao modelo de classes e objetos. Ele se opõe ao sistema de hierarquização da programação orientada a objetos ao permitir maior modularização e inter-operacionalização dos componentes que podem ser aplicados diretamente em diferentes entidades.\nDe forma abstrata, uma estrutura ECS no A-Frame poderia ser algo assim:\nCena:\nUm exemplo mais concreto seria:\na-scene:\nNesse exemplo, carro e moto são entidades distintas, mas rodas e material são componentes que podem ser compartilhados pelas diferentes entidades. Esses componentes irão se diferenciar por possuírem valores diferentes para os seus atributos (e.g. rodas com quantidade : 2 ou quantidade : 4) e por estarem atrelados a diferentes entidades. Uma das vantages dessa abordagem ECS é que eu preciso programar o componente rodas somente uma vez e ele pode ser usado em diferentes veículos.\nEntidades podem ser aninhadas. Por exemplo, ao invés de tratar as rodas como sendo componentes, poderíamos considerar mais apropriado implementá-las na forma de uma entidade:\na-scene:\nVamos então criar nossa primeira entidade: o planeta Terra.\nSe fizermos o preview lateral para tentarmos observar o resultado, provavelmente não veremos nada. Isso ocorre, pois não estamos usando os óculos de realidade virtual. A melhor forma de interagir com a página gerada na tela do computador é escolhendo a opção Preview in a new window. Na página que foi aberta, devemos entrar no modo de inspeção (Visual inspector) ao digitar a combinação de teclas &lt;ctrl&gt; + &lt;alt&gt; + i.\nCada botão do mouse quando mantido apertado permite rotacionar, transladar e aproximar/afastar a visão da cena. Ao clicar em uma entidade é possível também aferir e alterar os valores dos seus atributos. É possível até mesmo criar entidades novas e atribuir componentes no Visual inspector. Ao apertar a tecla h (help), temos acesso a todas as teclas de atalho.\nVoltando à Terra, vamos “dar um talento” em nosso pale blue dot.1 Para isso, usaremos uma imagem planificada da superfície da Terra para projetá-la na esfera. Por sorte, o A-Frame faz isso muito diretamente para a gente. Vejamos como.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>O projeto Sol-Terra-Lua</span>"
    ]
  },
  {
    "objectID": "projetoSTL.html#elementos-html-do-a-frame",
    "href": "projetoSTL.html#elementos-html-do-a-frame",
    "title": "3  O projeto Sol-Terra-Lua",
    "section": "",
    "text": "Faça o login na sua conta do Glitch e remixe o projeto aframe-minicurso-vr\n\n\n\n\n\nO elemento HTML básico e obrigatório do A-Frame é o &lt;a-scene&gt; (Cena), o qual temos que incluir dentro do elemento &lt;body&gt;:\n&lt;body&gt;\n    &lt;a-scene&gt;\n    &lt;/a-scene&gt;\n&lt;/body&gt;\n\n\n\n\n\n\nEntidade 1:\n\nComponente A -&gt; Atributo A1: valor E1A1; Atributo A2: valor E1A2\nComponente B -&gt; Atributo B1: valor E1B1; Atributo B2: valor E1B2\n\nEntidade 2:\n\nComponente A -&gt; Atributo A1: valor E2A1; Atributo A2: valor E2A2\nComponente C -&gt; Atributo C1: valor E2C1; Atributo C2: valor E2C2\n\n\n\n\n\na-entity id = \"carro\":\n\nrodas = \"quantidade : 4; aro: 20\"\nmaterial = \"cor: azul; metalicidade: 0.5\"\n\na-entity id = \"moto\":\n\nrodas = \"quantidade : 2; aro: 40\"\nmaterial = \"cor: vermelho; metalicidade: 0.8\"\n\n\n\n\n\nIlustração das Entidades carro e moto com seus componentes e atributos específicos (feita com DALL-E)\n\n\n\n\n\n\na-entity id = \"fusca\":\n\na-entity id = \"rodas_do_fusca\":\n\nmaterial = \"cor: preto; metalicidade: 0.1\"\ndimensoes = \"aro: 20; largura: 10; quantidade: 4\"\n\n\na-entity id = \"moto\":\n\nrodas = \"quantidade : 2; aro: 40\"\nmaterial = \"cor: vermelho; metalicidade: 0.8\"\n\n\n\n\nColoque a entidade abaixo dentro do elemento a-scene:\n&lt;a-entity id=\"terra\"\n    geometry=\"primitive: sphere\"\n    material=\"color: blue\"&gt;\n&lt;/a-entity&gt;",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>O projeto Sol-Terra-Lua</span>"
    ]
  },
  {
    "objectID": "projetoSTL.html#carregando-arquivos-externos-em-nosso-projeto-stl",
    "href": "projetoSTL.html#carregando-arquivos-externos-em-nosso-projeto-stl",
    "title": "3  O projeto Sol-Terra-Lua",
    "section": "3.2 Carregando arquivos externos em nosso projeto STL",
    "text": "3.2 Carregando arquivos externos em nosso projeto STL\nO A-Frame possui um elemento chamado &lt;a-asset&gt; para pré-carregar todos os recursos (imagens, áudios, vídeos, etc) que sejam usados na página. Existem duas formas para fazer isso:\n\nCarregando o recurso dentro do Glitch via Files no menu lateral de arquivos.\nIndicando o endereço de internet (URL) do recurso caso ele esteja disponível.\n\nNo momento, vamos usar a segunda opção.\n\nClique com o botão direito do mouse sobre o mapa da Terra abaixo e copie o seu link.\n\n\n\n\nMapa terrestre planificado. Fonte: https://upload.wikimedia.org/\n\n\n\nDentro do &lt;a-scene&gt; inclua o elemento:\n&lt;a-assets&gt;\n    &lt;img id=\"mapa_terra\" src=\"substitua_isto_pelo_endereço_da_imagem\"&gt;\n&lt;/a-assets&gt;\nEm seguida substitua o atributo color por src no componente material da entidade terra, usando como valor a id do mapa da Terra:\n&lt;a-entity id=\"terra\"\n    geometry=\"primitive: sphere\"\n1    material=\"src: #mapa_terra\"&gt;\n&lt;/a-entity&gt;\n\n1\n\nAtributo src no lugar de color.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>O projeto Sol-Terra-Lua</span>"
    ]
  },
  {
    "objectID": "projetoSTL.html#sistemas-de-coordenadas-no-a-frame",
    "href": "projetoSTL.html#sistemas-de-coordenadas-no-a-frame",
    "title": "3  O projeto Sol-Terra-Lua",
    "section": "3.3 Sistemas de coordenadas no A-Frame",
    "text": "3.3 Sistemas de coordenadas no A-Frame\nUma característica muito poderosa no A-Frame, é o conceito de sistemas de referências locais (referenciais), que é fácil de implementar quando você aninha uma &lt;a-entity&gt; dentro de outra.\nPense que cada entidade tem seu próprio sistema de coordenadas (x, y, z), que define sua posição, rotação e escala. Quando uma &lt;a-entity&gt; está dentro de outra, dizemos que a entidade interna usa o sistema de referência local da entidade que a contém. Isso significa que qualquer transformação (movimento, rotação) aplicada à entidade “pai” afeta todas as suas “filhas” de forma relativa. Ou seja, quando criamos uma &lt;a-entity&gt;, não definimos apenas as propriedades do objeto 3D pelas suas componentes, mas também, implicitamente, criamos um sistema de coordenadas local.\nPodemos, ainda, criar uma &lt;a-entity&gt; “vazia”, ou seja, sem componentes geométricos “plugados” nela. Nesse caso, ela serve exclusivamente como um sistema de coordenadas de referência para todas outras entidades que sejam aninhadas dentro dela.\nE o nosso projeto Sol-Terra-Lua se beneficia diretamente desse recurso. Vamos considerar uma &lt;a-entity&gt; que representa, exclusivamente, o referencial Terra e dentro dela outra &lt;a-entity&gt; que representa a Lua. Se você mover ou rotacionar o referencial Terra (a entidade “pai”), a Lua (a entidade “filha”) será movida junto, mas ela ainda pode orbitar ao redor do referencial Terra se aplicarmos uma rotação à Lua individualmente. Assim, a Lua se move de duas maneiras: ela orbita o Sol ao “seguir” a Terra (movimento da entidade “pai”) e orbita a Terra (movimento da entidade “filha”).2\n\n\nVideo\nAo deslocar a a-entity ref-Terra (referencial “pai”), a a-entity lua (entidade filha) desloca-se conjuntamente. Ao deslocar a a-entity lua, a a-entity ref-Terra permanece inalterada.\n\n\nPortanto, o A-Frame é muito prático para simular cenários em que o movimento de um objeto depende de outro, como no caso de planetas em órbita, satélites, ou até objetos conectados em uma cadeia de eventos. Ao invés de ter que recalcular constantemente as posições de todos os objetos manualmente, o A-Frame faz isso automaticamente ao respeitar as hierarquias de aninhamento.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>O projeto Sol-Terra-Lua</span>"
    ]
  },
  {
    "objectID": "projetoSTL.html#cada-astro-em-seu-lugar",
    "href": "projetoSTL.html#cada-astro-em-seu-lugar",
    "title": "3  O projeto Sol-Terra-Lua",
    "section": "3.4 Cada astro em seu lugar",
    "text": "3.4 Cada astro em seu lugar\nNeste ponto, temos todos os elementos para a construção do sistema Sol-Terra-Lua.\n\nPrimeiramente, vamos atualizar os nossos assets com as imagens das superfícies do Sol e da Lua:\n&lt;a-assets&gt;\n    &lt;img id=\"mapa_sol\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/99/Map_of_the_full_sun.jpg/1280px-Map_of_the_full_sun.jpg\"&gt;\n    &lt;img id=\"mapa_terra\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/2/23/Blue_Marble_2002.png/1280px-Blue_Marble_2002.png\"&gt;\n    &lt;img id=\"mapa_lua\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/d/d1/Solarsystemscope_texture_8k_moon.jpg/1280px-Solarsystemscope_texture_8k_moon.jpg\"&gt;\n&lt;/a-assets&gt;\n\nVamos criar os sistemas de coordenadas. O Sol será a entidade que comporá o sistema de coordenadas pai. Dentro dele, criaremos uma entidade para o referencial Terra e, dentro deste, o referencial Lua.\n\nTeremos, portanto, o seguinte aninhamento de sistemas de coordenadas:\n&lt;a-entity id=\"ref_sol\"&gt;\n    &lt;a-entity id=\"ref_terra\"&gt;\n        &lt;a-entity id=\"ref_lua\"&gt;        \n        &lt;/a-entity&gt;\n    &lt;/a-entity&gt;    \n&lt;/a-entity&gt;\n\nVamos agora inserir cada astro em seu devido lugar e com o seu devido tamanho. Poderíamos respeitar a escala relativa de tamanhos, mas como o Sol é muito maior que a Terra (cerca de 100 vezes), vamos adotar uma escala intermediária para fins didáticos. O mesmo vale para as distâncias entre os astros (a distância Sol-Terra é cerca de 500 vezes maior que Terra-Lua).\nA Tabela 3.1 contém os tamanhos e distâncias dos astros do projeto.\n\n\n\nTabela 3.1: Dimensões dos astros em valores reais (real) e com os valores utilizados no projeto (util)\n\n\n\n\n\n\n\n\n\n\nAstro\nDiâmetro\nDistância ao astro central\n\n\n\n\nSol\n\nreal: 140 mil km\nutil: 30 cm\n\n\nnão se aplica\nnão se aplica\n\n\n\nTerra\n\nreal: 12,7 mil km\nutil: 15 cm\n\n\nreal: 150 milhões km\nutil: 1,5 m\n\n\n\nLua\n\nreal: 3,5 mil km\nutil: 5cm\n\n\nreal: 384 mil km\nutil: 0,5 m\n\n\n\n\n\n\n\nPara os diâmetros, usamos o atributo radius do componente geometry e para as distâncias usamos o componente position. No A-Frame, a unidade de distância é o metro.\n\nAs entidades de cada astro nos seus respectivos referenciais fica da seguinte forma:\n&lt;a-entity id=\"ref_sol\" position=\"0 0 0\"&gt;\n\n    &lt;a-entity id=\"sol\"\n        geometry=\"primitive: sphere; radius: 0.3\"\n        material=\"src: #mapa_sol\"&gt;\n    &lt;/a-entity&gt;\n\n    &lt;a-entity id=\"ref_terra\"&gt;&lt;a-entity position=\"1.5 0.0 0\"&gt;\n\n        &lt;a-entity id=\"terra\"\n            geometry=\"primitive: sphere; radius: 0.15\"\n            material=\"src: #mapa_terra\"&gt;\n        &lt;/a-entity&gt;\n\n        &lt;a-entity id=\"ref_lua\"&gt;&lt;a-entity position=\"0 0.0 0.5\"&gt;\n\n            &lt;a-entity id=\"lua\"\n                geometry=\"primitive: sphere; radius: 0.05\"\n                material=\"src: #mapa_lua\"&gt;\n            &lt;/a-entity&gt;\n\n        &lt;/a-entity&gt;&lt;/a-entity&gt;\n\n    &lt;/a-entity&gt;&lt;/a-entity&gt;\n\n&lt;/a-entity&gt;\n\nRepare que tivemos que colocar o componente position em uma a-entity própria dentro da a-entity de referencial. Isso é necessário para que os eixos de rotação associados ao movimento orbital estejam fora do centro do astro orbitante. Outra observação é que todas as dimensões são informadas ao A-Frame sem explicitar as unidades, pois o A-Frame considera todas elas metros.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>O projeto Sol-Terra-Lua</span>"
    ]
  },
  {
    "objectID": "projetoSTL.html#animando-as-coisas",
    "href": "projetoSTL.html#animando-as-coisas",
    "title": "3  O projeto Sol-Terra-Lua",
    "section": "3.5 Animando as coisas",
    "text": "3.5 Animando as coisas\nComo já dizia o sábio Galileu, “Eppur si muove”.3 Vamos então pôr o mundo a girar.\nO A-Frame possui várias possibilidades de animação built in através do componente animation. Os atributos principais desse componente são:\n\nproperty: a propriedade da entidade que será animada, e.g. ângulo de rotação, posição, grau de transparência, etc.\nfrom: o valor inicial da propriedade (default: o valor atual).\nto: o valor final da propriedade ao término da animação.\ndur: duração da animação em milissegundos.\nloop: se a animação deve ser reiniciada automaticamente após dur ms (tureou false).\neasing: a taxa de variação da propriedade (default: aumento quadrático = aceleração constante).\n\n\n3.5.1 Rotações em torno do próprio eixo\nComecemos implementando a rotação da Terra em torno do próprio eixo.\n\nPara isso, inclua o seguinte componente animation na entidade terra:\n&lt;a-entity id=\"terra\"\n    geometry=\"primitive: sphere\"\n    material=\"src: #mapa_terra\"\n1    animation=\"property: rotation; to: 0 360 0; loop: true; dur: 10000; easing: linear\"&gt;\n&lt;/a-entity&gt;\n\n1\n\nComponente animation para rotação da Terra.\n\n\nRecarregue a página de preview e entre no modo de inspeção (&lt;ctrl&gt;&lt;alt&gt;i). A Terra ainda estará parada. Isso ocorre pois devemos acionar o botão ▶ (resume scene) no canto superior esquerdo.\n\nAssim, deveremos observar a Terra girando ad aeternum (loop: true) com velocidade constante (easing: linear) e executando uma revolução (to: 0 360 0) a cada 10 segundos (dur: 10000).\n\n\nVideo\nTerra em movimento de rotação com o componente animation.\n\n\n\n\n3.5.2 Movimento orbital\nO movimento orbital será implementado pela rotação do sistema de coordenadas associado ao astro. Para isso, incluiremos o componente animation que agora rotacionará o astro não em torno do centro, mas em torno da posição dada pelo componente position na a-entity interna.\nDa mesma forma que fizemos com as dimensões espaciais, não seremos fieis às proporções temporais da dinâmica dos astros. A Tabela 3.2 contém os períodos de rotação e orbital que escolhemos para os três astros.\n\n\n\nTabela 3.2: Períodos dos astros em valores reais (real) e com os valores utilizados no projeto (util)\n\n\n\n\n\n\n\n\n\n\nAstro\nPeríodo de rotação\nPeríodo orbital\n\n\n\n\nSol\n\nreal: 30 dias\nutil: 50 s\n\n\nnão se aplica\nnão se aplica\n\n\n\nTerra\n\nreal: 24 horas\nutil: 10 s\n\n\nreal: 365,3 dias\nutil: 300 s\n\n\n\nLua\n\nreal: 29,5 dias\nutil: 30 s\n\n\nreal: 29,5 dias\nutil: 30 s\n\n\n\n\n\n\n\n\nPortanto, o movimento orbital da Terra será implementado por:\n    &lt;a-entity id=\"ref_terra\" animation=\"property: rotation; to: 0 360 0; loop: true; dur: 300000; easing: linear\"&gt;&lt;a-entity position=\"1.5 0.0 0\"&gt;\n\nAssim, deveremos observar a Terra orbitando em torno do Sol ad aeternum (loop: true) com velocidade constante (easing: linear) e executando uma revolução (to: 0 360 0) a cada 300 segundos (dur: 300000).\n\nAplicando as animações correspondentes à Lua, o sistema STL completo fica da seguinte forma:\n    &lt;a-entity id=\"ref_sol\" position=\"0 0 0\"&gt;\n\n        &lt;a-entity id=\"sol\"\n            geometry=\"primitive: sphere; radius: 0.3\"\n            material=\"src: #mapa_sol\"&gt;\n        &lt;/a-entity&gt;\n\n        &lt;a-entity id=\"ref_terra\" animation=\"property: rotation; to: 0 360 0; loop: true; dur: 300000; easing: linear\"&gt;&lt;a-entity position=\"1.5 0.0 0\"&gt;\n\n            &lt;a-entity id=\"terra\"\n                geometry=\"primitive: sphere; radius: 0.15\"\n                material=\"src: #mapa_terra\"\n                animation=\"property: rotation; to: 0 360 0; loop: true; dur: 10000; easing: linear\"&gt;\n            &lt;/a-entity&gt;\n\n            &lt;a-entity id=\"ref_lua\" animation=\"property: rotation; to: 0 360 0; loop: true; dur: 30000; easing: linear\"&gt;&lt;a-entity position=\"0 0.0 0.5\"&gt;\n\n                &lt;a-entity id=\"lua\"\n                    geometry=\"primitive: sphere; radius: 0.05\"\n                    material=\"src: #mapa_lua\"&gt;\n                &lt;/a-entity&gt;\n\n            &lt;/a-entity&gt;&lt;/a-entity&gt;\n\n        &lt;/a-entity&gt;&lt;/a-entity&gt;\n\n    &lt;/a-entity&gt;\n\nHá algo importante a observar no código acima. Não implementamos o animation associado à rotação da Lua em torno do próprio eixo. Isso significa que essa rotação não existe? Existe sim! Sabemos que devido ao efeito de “travamento” gravitacional pelas forças de maré atuando ao longo de milhões de anos, a Lua orbita com a mesma face voltada para Terra. Isso implica que o período de translação coincide com o de rotação. Quando fazemos a rotação de um sistema de referência no A-Frame, esse “travamento” ocorre por padrão, por isso que não precisamos incluir a animation correspondente.\n\n\nVideo\nSistema Sol-Terra-Lua com todos os movimentos – de rotação e orbital – implementados.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>O projeto Sol-Terra-Lua</span>"
    ]
  },
  {
    "objectID": "projetoSTL.html#refinando-o-sistema",
    "href": "projetoSTL.html#refinando-o-sistema",
    "title": "3  O projeto Sol-Terra-Lua",
    "section": "3.6 Refinando o sistema",
    "text": "3.6 Refinando o sistema\nSe quisermos explorar conceitos como estações do ano, fases da Lua e eclipses, existem certos detalhes do movimento dos astros que podemos abrir mão, como a excentricidade das órbitas, o movimento em torno do centro de massa ao invés do centro do astro, movimento de precessão e nutação, entre outros. Mas alguns são essenciais e estão na origem e geram as especificidades importantes daqueles fenômenos. São eles: (i) a inclinação do eixo de rotação da Terra e (ii) a inclinação do plano da órbita da Lua em torno da Terra em relação ao plano da órbita da Terra em torno do Sol.\n\n3.6.1 Inclinação do eixo de rotação da Terra\nConforme explicamos na seção Seção 3.5.2, a rotação de uma a-entity fora de centro no A-Frame ocorre de forma “travada”. Isso significa que uma volta completa do astro em torno do centro também causa uma volta completa do astro em torno do próprio eixo. Para entender melhor esse efeito, observe o vídeo 1 em que a Terra é vista orbitando o Sol de perfil aplicando animation somente à a-entity ref-terra e sem aplicar animation de rotação em torno do próprio eixo:\n    &lt;a-entity id=\"ref_terra\" animation=\"property: rotation; to: 0 360 0; loop: true; dur: 300000; easing: linear\"&gt;&lt;a-entity position=\"1.5 0.0 0\"&gt;\n    \n        &lt;a-entity id=\"terra\"\n            geometry=\"primitive: sphere; radius: 0.15\"\n            material=\"src: #mapa_terra\"&gt;\n        &lt;/a-entity&gt;\n                            \n    &lt;/a-entity&gt;&lt;/a-entity&gt;\n\n\nVideo\nIlustração do movimento orbital da Terra usando somente o animation da a-entity ref-terra. A cada volta na órbita a Terra dá uma volta em torno do próprio eixo (quando próxima à câmera, apresenta a África voltada para nós, quando longe, apresenta o Pacífico.",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>O projeto Sol-Terra-Lua</span>"
    ]
  },
  {
    "objectID": "projetoSTL.html#footnotes",
    "href": "projetoSTL.html#footnotes",
    "title": "3  O projeto Sol-Terra-Lua",
    "section": "",
    "text": "Expressão cunhada pelo astrônomo e divulgador científico Carl Sagan ao descrever a imagem da Terra capturada pela sonda Voyager 1, a uma grande distância. No retrato, o planeta aparece como um minúsculo ponto azul. Sagan utilizou essa imagem para refletir sobre a humildade e a responsabilidade da humanidade em relação ao único lar conhecido.↩︎\nNa verdade, a Lua não gira em tono da Terra, mas em torno do centro de massa do sistema Terra-Lua, assim como a própria Terra. Por motivos didáticos, usaremos o sistema de referência centrado na Terra para implementar o movimento orbital da Lua. Essa aproximação não é tão ruim, uma vez que o centro de massa do sistema está bem mais próximo da Terra do que da Lua.↩︎\nA expressão em italiano que significa “E, no entanto, ela se move” teria sido dita por Galileu Galilei após ser forçado pela Inquisição a renegar sua defesa do heliocentrismo. Galileu teria murmurado a frase em desafio, reafirmando sua convicção, mesmo após a retratação oficial. Entretanto, não há evidências da vericidade dessa fala.↩︎",
    "crumbs": [
      "<span class='chapter-number'>3</span>  <span class='chapter-title'>O projeto Sol-Terra-Lua</span>"
    ]
  },
  {
    "objectID": "referencias.html",
    "href": "referencias.html",
    "title": "4  Referências",
    "section": "",
    "text": "Silva, Nelson Canzian da. 2016. Física Com JavaScript. Depto de\nFísica - UFSC. https://canzian.prof.ufsc.br/fisicacomjavascript/fjs-00-tudo.pdf.",
    "crumbs": [
      "<span class='chapter-number'>4</span>  <span class='chapter-title'>Referências</span>"
    ]
  }
]